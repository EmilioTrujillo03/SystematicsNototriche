# Define el valor mínimo y el valor máximo
lower = 1
Upper = 5
Squaresum = 0
for (i in lower:Upper) {
cat (i, i^2, "\n")
Squaresum = Squaresum + i^2
}
cat("The sum of it all is", Squaresum)
A2 = 2
A2
setwd("C:/Users/Emilio Trujillo/Desktop/SystematicsNototriche/Scripts")
getwd()
install.packages("ape")
library(ape)
SeqNoto = read.FASTA(N3_rb_rbcLaF.fasta)
?ape
?
??ape
SeqMlava =
read.FASTA(N3_rb_rbcLaF.fasta, type = "DNA")
getwd()
list.files(
)
SeqMlava =
read.FASTA(N3_rb_rbcLaF.fasta, type = "DNA")
install.packages("ape")
library(ape)
install.packages("ape", dependencies = T)
install.packages("ape", dependencies = T)
library(ape)
read.FASTA("N3_rb_rbcLaF.fasta", type = "DNA")
SeqNoto = read.FASTA("N3_rb_rbcLaF.fasta", type = "DNA")
View(SeqNoto)
SeqMlava = read.FASTA("Mv_rb_rbcl.fasta", type = "DNA")
as.matrix(SeqNoto)
View(SeqMlava)
View(SeqNoto)
cat(SeqNoto)
print(SeqNoto)
print(SeqMlava)
SeqMalva = read.FASTA("Mv_rb_rbcl.fasta", type = "DNA")
rm(SeqMlava)
print(SeqNoto)
print(SeqMlava)
print(SeqMalva)
as.character(SeqMalva)
plot(as.character(SeqMalva))
BaseNoto = as.character(SeqNoto)
BaseMalva = as.character(SeqMalva)
View(BaseMalva)
BaseNoto
readline(BaseMalva)
min(BaseMalva)
View(SeqNoto)
SeqNoto[["H231005-008_I21_N3_rb_rbcLaF.ab1	1258"]]
read.FASTA("N3_rb_rbcLaF.fasta", type = "DNA")
readlines(SeqMalva)
readLines(SeqMalva)
library(ape)
SeqNoto
nlines("N3_rb_rbcLaF.fasta")
FASTAfile = tempfile("N3_rb_rbcLaF.fasta", fileext = ".fasta")
FASTAfile
rm(FASTAfile)
read.dna("N3_rb_rbcLaF.txt")
read.dna("N3_rb_rbcLaF.txt", format = .txt)
read.dna("N3_rb_rbcLaF.txt", format = ".txt")
read.dna("N3_rb_rbcLaF.txt", format = "interleaved")
read.dna("N3_rb_rbcLaF.txt", format = "interleaved", rm.na = T)
read.dna("N3_rb_rbcLaF.txt", format = "interleaved", skip = 0,
nlines = 0, comment.char = "#",
as.character = FALSE, as.matrix = NULL)
BaseMalva
BaseMalva[2]
BaseMalva[123]
BaseMalva[45]
cat("3 40")
cat(BaseMalva)
base.freq(BaseMalva)
base.freq(SeqNoto)
base.freq(SeqMalva)
FreqNoto = base.freq(SeqNoto)
FreqMalva = base.freq(SeqMalva)
FreqMalva
SeqNotortnl = read.FASTA("N3_TRNL", type = "DNA")
SeqNotortnl = read.FASTA("N3_TRNL.fasta", type = "DNA")
SeqMalvartrnl = read.FASTA("Mv_TrnL.fasta", type = "DNA")
SeqMalvartrnl = read.FASTA("Mv_TrnL.fa", type = "DNA")
BaseNotoTRNL = as.character(SeqMalvartrnl)
BaseMalvaTRNL = as.character(SeqNotortnl)
SeqNotortrnl = read.FASTA("N3_TRNL.fasta", type = "DNA")
base.freq(SeqNototrnl)
SeqNototrnl = read.FASTA("N3_TRNL.fasta", type = "DNA")
SeqMalvatrnl = read.FASTA("Mv_TrnL.fa", type = "DNA")
base.freq(SeqNototrnl)
base.freq(SeqMalvatrnl)
plot(base.freq(SeqNotorbcl))
data.frame(Columna1 = BaseMalvaTRNL)
D1=
data.frame(Columna1 = BaseMalvaTRNL)
View(D1)
D1=
data.frame(Columna1 = base.freq(SeqNototrnl))
base.freq(SeqNototrnl)
View(D1)
D1=
data.frame(Frecuencia = base.freq(SeqNototrnl)
View(D1)
D1=
data.frame(Frecuencia = base.freq(SeqNototrnl))
View(D1)
DataFrameTRNL=
data.frame(FrecuenciaNoto = base.freq(SeqNototrnl), FrecuenciaMalva = base.freq(SeqNototrnl))
View(DataFrameTRNL)
DataFrameTRNL=
data.frame(FrecuenciaNoto = base.freq(SeqNototrnl), FrecuenciaMalva = base.freq(SeqMalvatrnl))
View(DataFrameTRNL)
data.frame(FrecuenciaNoto = base.freq(SeqNotorbcl), FrecuenciaMalva = base.freq(SeqMalvarbcl))
SeqNotorbcl = read.FASTA("N3_rb_rbcLaF.fasta", type = "DNA")
SeqMalvarbcl = read.FASTA("Mv_rb_rbcl.fasta", type = "DNA")
data.frame(FrecuenciaNoto = base.freq(SeqNotorbcl), FrecuenciaMalva = base.freq(SeqMalvarbcl))
DataframeRBCL
DataframeRBCL =
data.frame(FrecuenciaNoto = base.freq(SeqNotorbcl), FrecuenciaMalva = base.freq(SeqMalvarbcl))
View(DataframeRBCL)
View(DataFrameTRNL)
plot(data.frame)
plot(DataframeRBCL)
boxplot(DataframeRBCL$FrecuenciaMalva)
plot(DataframeRBCL$FrecuenciaMalva)
View(BaseMalvaTRNL)
View(DataframeRBCL)
summary(DataframeRBCL$FrecuenciaNoto)
summary(DataframeRBCL)
DataFrameTRNL=
data.frame(Bases = c("A, C, G, T"), FrecuenciaNoto = base.freq(SeqNototrnl), FrecuenciaMalva = base.freq(SeqMalvatrnl))
View(DataFrameTRNL)
DataFrameTRNL=
data.frame( FrecuenciaNoto = base.freq(SeqNototrnl), FrecuenciaMalva = base.freq(SeqMalvatrnl))
View(DataFrameTRNL)
DataFrameTRN
DataFrameTRNL
Compa_TRL_RBCL =
for(i in vector) {
}
Compa_TRL_RBCL = 0
Compa_Noto_RBCL_TRNL  = 0
Compa_Malvas_RBCL_TRNL = 0
BaseFreqNotoTRNL = base.freq(SeqNototrnl)
BaseFreqMalvaRBCL =  base.freq(SeqMalvatrnl)
BaseFreqNotoTRNL = base.freq(SeqNotorbcl)
BaseFreqMalvaRBCL = base.freq(SeqMalvarbcl)
BaseFreqMalvaTRNL = base.freq(SeqMalvatrnl)
BaseFreqNotoTRNL = base.freq(SeqNototrnl)
BaseFreqMalvaTRNL = base.freq(SeqMalvatrnl)
BaseFreqNotoTRNL = base.freq(SeqNotorbcl)
BaseFreqMalvaRBCL = base.freq(SeqMalvarbcl)
BaseFreqNotoTRNL = base.freq(SeqNototrnl)
BaseFreqMalvaTRNL = base.freq(SeqMalvatrnl)
BaseFreqNotoRBCL =base.freq(SeqNotorbcl)
BaseFreqMalvaRBCL = base.freq(SeqMalvarbcl)
for(i in Compa_Noto_RBCL_TRNL)
{
Compa_Noto_RBCL_TRNL =
data.frame( TRNL = base.freq(SeqNototrnl), RBCL = base.freq(SeqNotorbcl))
}
View(Compa_Noto_RBCL_TRNL)
print(Compa_Noto_RBCL_TRNL)
Compa_Noto_Malva_RBCL_TRNL = 0
base.freq(SeqNototrnl)
Compa_Noto_TRNL_RBCL =
data.frame( NOTOTRNL = base.freq(SeqNototrnl), NOTORBCL = base.freq(SeqNotorbcl))
print(Compa_Noto_RBCL_TRNL)
Compa_Malva_RBCL_TRNL=
data.frame( MALVATRNL = base.freq(SeqMalvatrnl), MALVARBCL = base.freq(SeqMalvarbcl))
print(Compa_Malva_RBCL_TRNL)
Compa_Noto_RBCL_TRNL =
data.frame( NOTOTRNL = base.freq(SeqNototrnl), NOTORBCL = base.freq(SeqNotorbcl))
print(Compa_Noto_RBCL_TRNL)
Compa_Noto_RBCL_TRNL =
data.frame( NOTOTRNL = base.freq(SeqNototrnl), NOTORBCL = base.freq(SeqNotorbcl))
print(Compa_Noto_RBCL_TRNL)
Compa_Malva_RBCL_TRNL=
data.frame( MALVATRNL = base.freq(SeqMalvatrnl), MALVARBCL = base.freq(SeqMalvarbcl))
print(Compa_Malva_RBCL_TRNL)
print(Compa_Noto_RBCL_TRNL)
print(Compa_Malva_RBCL_TRNL)
# Establecer el directorio de trabajo en la carpeta Scripts/ dentro de la carpeta
# Systematics Nototriche
setwd("C:/Users/Emilio Trujillo/Desktop/SystematicsNototriche/Scripts")
#Para comprobar que estamos en el directorio correcto
getwd()
# Cargar las secuencias a objetos en RStudio
SeqNotorbcl = read.FASTA("N3_rb_rbcLaF.fasta", type = "DNA")
library(ape)
# Establecer el directorio de trabajo en la carpeta Scripts/ dentro de la carpeta
# Systematics Nototriche
setwd("C:/Users/Emilio Trujillo/Desktop/SystematicsNototriche/Scripts")
#Para comprobar que estamos en el directorio correcto
getwd()
# Cargar las secuencias a objetos en RStudio
SeqNotorbcl = read.FASTA("N3_rb_rbcLaF.fasta", type = "DNA")
SeqMalvarbcl = read.FASTA("Mv_rb_rbcl.fasta", type = "DNA")
SeqNototrnl = read.FASTA("N3_TRNL.fasta", type = "DNA")
SeqMalvatrnl = read.FASTA("Mv_TrnL.fa", type = "DNA")
# Convertir las secuencias en bases con caracteres
BaseMalvarbcl = as.character(SeqMalva)
BaseNotorbcl = as.character(SeqNoto)
BaseMalvaTRNL = as.character(SeqNotortnl)
BaseNotoTRNL = as.character(SeqMalvartrnl)
#Creas las base freqs de las regiones
BaseFreqNotoTRNL = base.freq(SeqNototrnl)
BaseFreqMalvaTRNL = base.freq(SeqMalvatrnl)
BaseFreqNotoRBCL =base.freq(SeqNotorbcl)
BaseFreqMalvaRBCL = base.freq(SeqMalvarbcl)
# Crear un data.frame con estas frecuencias
DataFrameTRNL=
data.frame( FrecuenciaNoto = base.freq(SeqNototrnl), FrecuenciaMalva = base.freq(SeqMalvatrnl))
DataframeRBCL =
data.frame(FrecuenciaNoto = base.freq(SeqNotorbcl), FrecuenciaMalva = base.freq(SeqMalvarbcl))
# Para comparar la frecuencias de bases entre diferentes regiones de la misma especie
Compa_Noto_RBCL_TRNL =
data.frame( NOTOTRNL = base.freq(SeqNototrnl), NOTORBCL = base.freq(SeqNotorbcl))
print(Compa_Noto_RBCL_TRNL)
Compa_Malva_RBCL_TRNL=
data.frame( MALVATRNL = base.freq(SeqMalvatrnl), MALVARBCL = base.freq(SeqMalvarbcl))
print(Compa_Malva_RBCL_TRNL)
# Print de estas comparaciones
print(Compa_Noto_RBCL_TRNL)
print(Compa_Malva_RBCL_TRNL)
